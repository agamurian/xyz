{"version":3,"file":"index.min.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/ogl/src/math/functions/Vec3Func.js","../node_modules/ogl/src/math/Vec3.js","../node_modules/ogl/src/core/Geometry.js","../node_modules/ogl/src/core/Program.js","../node_modules/ogl/src/core/Renderer.js","../node_modules/ogl/src/math/functions/QuatFunc.js","../node_modules/ogl/src/math/functions/Vec4Func.js","../node_modules/ogl/src/math/Quat.js","../node_modules/ogl/src/math/functions/Mat4Func.js","../node_modules/ogl/src/math/Mat4.js","../node_modules/ogl/src/math/Euler.js","../node_modules/ogl/src/math/functions/EulerFunc.js","../node_modules/ogl/src/core/Transform.js","../node_modules/ogl/src/core/Camera.js","../node_modules/ogl/src/math/functions/Mat3Func.js","../node_modules/ogl/src/math/Mat3.js","../node_modules/ogl/src/core/Mesh.js","../node_modules/ogl/src/core/Texture.js","../node_modules/ogl/src/math/functions/Vec2Func.js","../node_modules/ogl/src/math/Vec2.js","../node_modules/ogl/src/extras/Sphere.js","../node_modules/ogl/src/extras/Orbit.js","../src/gl/loadTextureAsync.mjs","../src/Component.svelte","../src/gl/makeCamera.mjs","../src/gl/makeProgram.mjs"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.gl.viewport(0, 0, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(node.worldMatrix);\n\n        const radius = node.geometry.bounds.radius * node.worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nexport class Sphere extends Geometry {\n    constructor(\n        gl,\n        {\n            radius = 0.5,\n            widthSegments = 16,\n            heightSegments = Math.ceil(widthSegments * 0.5),\n            phiStart = 0,\n            phiLength = Math.PI * 2,\n            thetaStart = 0,\n            thetaLength = Math.PI,\n            attributes = {},\n        } = {}\n    ) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const pStart = phiStart;\n        const pLength = phiLength;\n        const tStart = thetaStart;\n        const tLength = thetaLength;\n\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let iv = 0;\n        let ii = 0;\n        let te = tStart + tLength;\n        const grid = [];\n\n        let n = new Vec3();\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let vRow = [];\n            let v = iy / hSegs;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let u = ix / wSegs;\n                let x = -radius * Math.cos(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n                let y = radius * Math.cos(tStart + v * tLength);\n                let z = radius * Math.sin(pStart + u * pLength) * Math.sin(tStart + v * tLength);\n\n                position[i * 3] = x;\n                position[i * 3 + 1] = y;\n                position[i * 3 + 2] = z;\n\n                n.set(x, y, z).normalize();\n                normal[i * 3] = n.x;\n                normal[i * 3 + 1] = n.y;\n                normal[i * 3 + 2] = n.z;\n\n                uv[i * 2] = u;\n                uv[i * 2 + 1] = 1 - v;\n\n                vRow.push(iv++);\n            }\n\n            grid.push(vRow);\n        }\n\n        for (let iy = 0; iy < hSegs; iy++) {\n            for (let ix = 0; ix < wSegs; ix++) {\n                let a = grid[iy][ix + 1];\n                let b = grid[iy][ix];\n                let c = grid[iy + 1][ix];\n                let d = grid[iy + 1][ix + 1];\n\n                if (iy !== 0 || tStart > 0) {\n                    index[ii * 3] = a;\n                    index[ii * 3 + 1] = b;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n                if (iy !== hSegs - 1 || te < Math.PI) {\n                    index[ii * 3] = b;\n                    index[ii * 3 + 1] = c;\n                    index[ii * 3 + 2] = d;\n                    ii++;\n                }\n            }\n        }\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","import { Texture } from 'ogl';\n\n// not sure why this doesn't work locally\n/**\n * async loads image \n * @param src {string}\n * @returns {Promise<HTMLImageElement>}\n */\nasync function getImage(src) {\n    const response = await fetch(src, { mode: 'cors' });\n    const blob = await response.blob();\n\n    if (!!createImageBitmap) {\n        return await createImageBitmap(blob, { imageOrientation: 'flipY', premultiplyAlpha: 'none' });\n    }\n\n    return new Promise((resolve, reject) => {\n        const urlLoader = (!!URL ? URL : webkitURL);\n        const objectUrl = urlLoader.createObjectURL(blob);\n        const img = new Image();\n        img.onload = () => {\n            resolve(img);\n            urlLoader.revokeObjectURL(objectUrl);\n        }\n        img.onerror = reject;\n        img.src = objectUrl;\n    });\n}\n\nfunction powerOfTwo(value) {\n    return Math.log2(value) % 1 === 0;\n}\n\n/**\n * loads image from source async\n * determines if image is mipmapable\n * returns a function that accepts a webglrendering context and returns a texture with provided options\n * @param src {string}\n * @returns {Promise<(gl: WebGLRenderingContext) => Texture>}\n */\nexport default async function loadTextureAsync(src) {\n    const image = await getImage(src);\n    const mipmapable = powerOfTwo(image.width) && powerOfTwo(image.height);\n\n    return (gl, options = {}) => {\n        const mipmapableOptions = mipmapable ? options : {\n            ...options,\n            generateMipmaps: false,\n            minFilter: gl.LINEAR,\n            wrapS: gl.CLAMP_TO_EDGE,\n            wrapT: gl.CLAMP_TO_EDGE,\n        };\n        const texture = new Texture(gl, {\n            ...mipmapableOptions, image\n        });\n\n        if (!!image.close) {\n            texture.onUpdate = () => {\n                texture.onUpdate = null;\n                image.close();\n            };\n        }\n\n        return texture;\n    };\n}","<svelte:options tag=\"svelte-panorama\" />\n\n<script context=\"module\">\n  import { Renderer, Sphere, Orbit, Mesh } from \"ogl\";\n  import { loadTextureAsync, makeCamera, makeProgram } from \"./gl\";\n</script>\n\n<script>\n  import { onMount } from \"svelte\";\n\n  let className = \"\";\n  export let alt = \"Panoramic View\";\n  export { className as class };\n  export let fov = 30;\n  export let src;\n\n  let wrapper;\n  let canvas;\n  let raf;\n\n  onMount(() => {\n    const loader = loadTextureAsync(src);\n    const { clientWidth, clientHeight } = wrapper;\n    const renderer = new Renderer({\n      canvas: canvas,\n      width: clientWidth,\n      height: clientHeight,\n    });\n\n    const gl = renderer.gl;\n    gl.clearColor(1, 1, 1, 1);\n\n    const sphere = new Sphere(gl, {\n      radius: 1,\n      widthSegments: 64,\n    });\n    console.log(sphere);\n\n    const camera = makeCamera(gl, fov, clientWidth, clientHeight);\n    const controls = new Orbit(camera, {\n      enablePan: false,\n      enableZoom: true,\n      //zoomStyle: 0,\n      element: canvas,\n      maxDistance: 1,\n      minDistance: 0,\n    });\n\n    const resizeObserver = new ResizeObserver((entries) =>\n      entries.every(({ target: { clientWidth, clientHeight } }) => {\n        renderer.setSize(clientWidth, clientHeight);\n        camera.perspective({ aspect: clientWidth / clientHeight });\n      })\n    );\n    resizeObserver.observe(wrapper);\n\n    loader.then((loaded) => {\n      const texture = loaded(gl);\n      const program = makeProgram(gl, texture);\n      const scene = new Mesh(gl, {\n        geometry: sphere,\n        program: program,\n      });\n\n      function update() {\n        controls.update();\n        renderer.render({ scene: scene, camera: camera });\n        raf = requestAnimationFrame(update);\n      }\n\n      raf = requestAnimationFrame(update);\n    });\n\n    return () => {\n      cancelAnimationFrame(raf);\n      resizeObserver.unobserve(wrapper);\n      resizeObserver.disconnect();\n    };\n  });\n</script>\n\n<div aria-label={alt} class={className} bind:this={wrapper}>\n  <canvas bind:this={canvas} />\n</div>\n\n<style>\n  div {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","import { Camera } from \"ogl\";\n\nexport default function makeCamera(gl, fov, width, height) {\n    const camera = new Camera(gl, {\n        fov: fov,\n        aspect: width / height,\n    });\n    camera.position.set(0, 0, 1);\n    return camera;\n}","import { Program } from \"ogl\";\n\nimport fragment from \"./shaders/fragment.glsl\";\nimport vertex from \"./shaders/vertex.glsl\";\n\nexport default function makeProgram(gl, texture) {\n    return new Program(gl, {\n        cullFace: gl.FRONT,\n        uniforms: {\n            tex: {\n                value: texture,\n            },\n        },\n        vertex: vertex,\n        fragment: fragment,\n    });\n}"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","insert","target","node","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","attr","attribute","value","removeAttribute","getAttribute","setAttribute","attribute_to_object","attributes","result","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","length","update","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","customElement","m","new_on_destroy","map","filter","mount_component","SvelteElement","x","y","z","Math","sqrt","copy","out","subtract","scale","squaredLength","normalize","len","dot","cross","ax","ay","az","bx","by","bz","HTMLElement","[object Object]","super","this","attachShadow","mode","key","slotted","appendChild","_oldValue","newValue","detaching","d","destroy_component","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","angle","tempA","tempB","cosine","PI","acos","Vec3","v","Vec3Func.set","Vec3Func.copy","va","vb","Vec3Func.add","Vec3Func.subtract","Vec3Func.scale","Vec3Func.length","Vec3Func.distance","Vec3Func.squaredLength","Vec3Func.squaredDistance","Vec3Func.cross","Vec3Func.normalize","Vec3Func.dot","mat4","w","Vec3Func.transformMat4","Vec3Func.scaleRotateMat4","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","Vec3Func.transformQuat","Vec3Func.angle","t","Vec3Func.lerp","o","tempVec3","ID","ATTR_ID","isBoundsWarned","arrayCacheF32","Program","gl","vertex","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","canvas","console","error","id","warn","blendFunc","blendEquation","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","set","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","modeRGB","modeAlpha","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","setBlendEquation","flipFaces","textureUnit","currentProgram","useProgram","activeUniform","undefined","texture","setUniform","textureUnits","applyState","CW","deleteProgram","arrayLen","valueLen","Float32Array","flatten","setValue","state","get","slice","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","warnCount","message","Renderer","width","height","dpr","alpha","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","boundBuffer","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","FRAMEBUFFER","buffer","bindFramebuffer","extension","webgl2Func","extFunc","bind","renderOrder","zDepth","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","sortOpaque","sortTransparent","sortUI","concat","setViewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","getRenderList","multiply","aw","bw","Quat","onChange","QuatFunc.set","rad","sin","cos","QuatFunc.rotateX","QuatFunc.rotateY","QuatFunc.rotateZ","a0","a1","a2","a3","invDot","QuatFunc.invert","QuatFunc.copy","QuatFunc.normalize","qA","qB","QuatFunc.multiply","QuatFunc.dot","matrix3","fRoot","fTrace","j","k","QuatFunc.fromMat3","euler","order","sx","cx","sy","cy","sz","cz","QuatFunc.fromEuler","axis","s","QuatFunc.setAxisAngle","omega","cosom","sinom","scale0","scale1","QuatFunc.slerp","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","getScaling","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","getRotation","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","Mat4","m00","m01","m02","m03","m10","m20","m30","Mat4Func.set","Mat4Func.translate","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","Mat4Func.rotate","Mat4Func.scale","ma","mb","Mat4Func.multiply","fov","aspect","near","far","fovy","f","tan","nf","Mat4Func.perspective","left","right","bottom","top","lr","bt","Mat4Func.ortho","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","Mat4Func.fromQuat","b03","b04","b05","b06","b07","b08","b09","det","Mat4Func.invert","pos","xy","xz","yz","Mat4Func.fromRotationTranslationScale","Mat4Func.getRotation","Mat4Func.getScaling","max","Mat4Func.getMaxScaleOnAxis","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","Mat4Func.targetTo","Mat4Func.determinant","tmpMat4","Euler","asin","min","atan2","EulerFunc.fromRotationMatrix","fromQuaternion","fromRotationMatrix","Transform","parent","matrix","matrixAutoUpdate","position","quaternion","rotation","fromEuler","notifyParent","addChild","child","notifyChild","setParent","force","updateMatrix","worldMatrixNeedsUpdate","compose","invert","lookAt","tempMat4","tempVec3a","tempVec3b","Camera","zoom","projectionMatrix","viewMatrix","worldPosition","orthographic","perspective","fromPerspective","fromOrthogonal","inverse","frustum","constant","invLen","distance","geometry","bounds","radius","Infinity","computeBoundingSphere","center","getMaxScaleOnAxis","frustumIntersectsSphere","normal","plane","Mat3","Mat3Func.set","Mat3Func.translate","Mat3Func.rotate","Mat3Func.scale","Mat3Func.multiply","Mat3Func.fromQuat","vec3a","vec3b","vec3c","Mat3Func.invert","Mat3Func.normalFromMat4","Mesh","TRIANGLES","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","mesh","modelMatrix","cameraPosition","getNormalMatrix","determinant","use","emptyPixel","Uint8Array","isPowerOf2","Texture","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","anisotropy","level","createTexture","store","glState","REPEAT","bindTexture","needsUpdate","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","data","generateMipmap","onUpdate","Vec2","Vec2Func.set","Vec2Func.add","Vec2Func.subtract","Vec2Func.scale","Vec2Func.length","squaredDistance","Vec2Func.squaredLength","Vec2Func.cross","mat3","Vec2Func.transformMat4","Vec2Func.lerp","Sphere","VAOs","drawRange","start","count","instancedCount","currentGeometry","addAttribute","size","constructor","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","createBuffer","updateAttribute","isInstanced","bindBuffer","bufferData","STATIC_DRAW","bindAttributes","numLoc","vertexAttribPointer","enableVertexAttribArray","createVAO","drawElements","drawArrays","getPosition","array","sub","divide","computeBoundingBox","maxRadiusSq","fromArray","deleteBuffer","widthSegments","heightSegments","ceil","phiStart","phiLength","thetaStart","thetaLength","wSegs","hSegs","pStart","pLength","tStart","tLength","num","numIndices","uv","Uint32Array","iv","ii","te","grid","n","iy","vRow","ix","u","STATE","tempVec2a","tempVec2b","Orbit","object","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","pow","mouseButtons","ORBIT","ZOOM","PAN","pan","deltaX","deltaY","el","body","targetDistance","panLeft","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","dx","dy","handleTouchStartDollyPan","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","remove","passive","powerOfTwo","log2","async","loadTextureAsync","response","fetch","blob","createImageBitmap","imageOrientation","reject","urlLoader","URL","webkitURL","objectUrl","createObjectURL","img","Image","onload","revokeObjectURL","onerror","getImage","mipmapable","mipmapableOptions","close","div","append","canvas_1","wrapper","raf","class","className","alt","loader","clientWidth","clearColor","sphere","log","makeCamera","controls","resizeObserver","ResizeObserver","entries","every","observe","loaded","FRONT","tex","makeProgram","requestAnimationFrame","render","cancelAnimationFrame","unobserve","disconnect","$$value"],"mappings":"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"}